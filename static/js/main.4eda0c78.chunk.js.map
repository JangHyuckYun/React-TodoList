{"version":3,"sources":["styled/AddInput-Style.js","contexts/info.js","Add/AddInput.js","styled/TodoList-Style.js","TodoList/TodoList.js","Footer/Footer.js","images/road4.png","images/blue_mountain.jpg","styled/App-Style.js","styled/Status-Style.js","Status.js","App.js","index.js"],"names":["styled","div","defaultData","todoList","addTodo","modifyTodo","deleteTodo","validation","changeStateTodo","InfoContext","createContext","InfoStore","props","useState","JSON","parse","localStorage","getItem","setTodoList","console","log","getTodoIdx","itemId","findIndex","findItem","id","type","Array","isArray","forEach","idx","isModifying","target","isSelected","useBeforeunload","event","setItem","stringify","useEffect","document","querySelector","addEventListener","modifyingTodos","filter","item","className","length","map","Provider","value","itemIdx","splice","test","content","children","AddInput","useContext","input","useRef","readyAddTodo","current","ref","onKeyPress","key","onClick","TodoList","changeContent","dataset","onChange","changeSelected","checked","htmlFor","onDoubleClick","e","defaultValue","Footer","forestRoad","avg","css","Status","useMemo","list","allLen","completeLen","Math","ceil","getAverage","data","color","name","reveal","lineWidth","background","startAngle","lengthAngle","label","dataEntry","labelStyle","fontSize","fill","labelPosition","rounded","animate","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4eda0c78.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n    width:80%;\r\n    height:20%;\r\n    position: relative;\r\n    left:50%;\r\n    transform: translate(-50%, 0px);\r\n  \r\n    input {\r\n      width:100%;\r\n      height: 30px;\r\n    }\r\n`;","import {createContext, useEffect, useState} from \"react\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\n\r\nconst defaultData = {\r\n    todoList: [],\r\n\r\n    addTodo: () => {},\r\n    modifyTodo: () => {},\r\n    deleteTodo: () => {},\r\n    validation: () => {},\r\n    changeStateTodo: () => {},\r\n};\r\n\r\nexport const InfoContext = createContext(defaultData);\r\n\r\n\r\n\r\nconst InfoStore = (props) => {\r\n    const [todoList, setTodoList] = useState(JSON.parse(localStorage.getItem(\"todoList\")) || []);\r\n    console.log(todoList);\r\n    const getTodoIdx = (itemId) => {\r\n        return todoList.findIndex(findItem => findItem.id === itemId );\r\n    };\r\n\r\n    const addTodo = (item) => {\r\n        setTodoList([...todoList, item]);\r\n    };\r\n\r\n    const modifyTodo = (item) => {\r\n        todoList[getTodoIdx(item.id)] = item;\r\n\r\n        setTodoList([...todoList]);\r\n    };\r\n\r\n    const changeStateTodo = (itemId, type = \"modify\") => {\r\n        if(Array.isArray(itemId)) {\r\n            itemId.forEach(idx => {\r\n                todoList[getTodoIdx(idx)].isModifying = !todoList[getTodoIdx(idx)].isModifying;\r\n            });\r\n        } else {\r\n            let target = todoList[getTodoIdx(itemId)];\r\n            if(type === \"modify\") {\r\n                target.isModifying = !target.isModifying;\r\n            } else if(type === \"select\") {\r\n                target.isSelected = !target.isSelected;\r\n            }\r\n        }\r\n\r\n        setTodoList([...todoList]);\r\n    };\r\n\r\n\r\n    const deleteTodo = (itemIdx) => {\r\n        todoList.splice(itemIdx, 1);\r\n\r\n        setTodoList([...todoList]);\r\n    };\r\n\r\n    const validation = (item) => {\r\n        const regex = /^[a-zA-Z0-9ㄱ-ㅎ가-힣!?\"']+$/g;\r\n\r\n        return regex.test(item.content);\r\n    };\r\n\r\n    useBeforeunload((event) => {\r\n        localStorage.setItem(\"todoList\", JSON.stringify(todoList));\r\n    });\r\n\r\n    useEffect(() => {\r\n        document.querySelector(\"#root\").addEventListener(\"click\", ({target}) => {\r\n            const modifyingTodos = todoList.filter(item => item.isModifying);\r\n\r\n            if(target.className !== \"modifying\" && modifyingTodos.length !== 0) {\r\n                console.log(\"asfasf\");\r\n                changeStateTodo(modifyingTodos.map(item => item.id));\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <InfoContext.Provider value={{todoList, addTodo, modifyTodo, deleteTodo, validation, changeStateTodo}}>\r\n            {props.children}\r\n        </InfoContext.Provider>\r\n    );\r\n};\r\n\r\nexport default InfoStore;","import React, {useContext, useRef} from \"react\";\r\nimport AddInputStyle from \"../styled/AddInput-Style\";\r\nimport {InfoContext} from \"../contexts/info\";\r\nimport {FaPlusCircle} from \"react-icons/fa\";\r\n\r\nconst AddInput = (props) => {\r\n    const { className } = props;\r\n    const {todoList, addTodo, validation} = useContext(InfoContext);\r\n    const input = useRef(null);\r\n\r\n    const createItem = () => {\r\n        const lastItem = todoList[todoList.length - 1] || {id:0, content:\"\"};\r\n\r\n        return {\r\n            id: lastItem.id + 1,\r\n            content: input.current.value,\r\n            isSelected:false,\r\n            isModifying:false,\r\n        };\r\n    }\r\n\r\n    const readyAddTodo = () => {\r\n        const item = createItem();\r\n\r\n        if(validation(item)) {\r\n            addTodo(item);\r\n\r\n            input.current.value = \"\";\r\n        } else {\r\n            console.log(\"error!!\");\r\n        }\r\n    };\r\n\r\n    const onKeyPress = ( { key } ) => {\r\n        if(key === \"Enter\") readyAddTodo();\r\n    };\r\n\r\n    return (\r\n        <AddInputStyle className={className}>\r\n            <input ref={input} type=\"text\" onKeyPress={onKeyPress}/>\r\n                <FaPlusCircle onClick={readyAddTodo} />\r\n        </AddInputStyle>\r\n    );\r\n};\r\n\r\nexport default AddInput;","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  position: relative;\r\n\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  .todo {\r\n    margin: 15px 0;\r\n    padding: 5px 0;\r\n    min-height:41px;\r\n    height: auto;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    .text_box {\r\n      flex: 1;\r\n      min-height:100%;\r\n      text-align: left;\r\n      padding: 0 10px;\r\n\r\n      input {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 25px;\r\n        border: 1px solid black;\r\n        padding:5px 0 5px 10px;\r\n        \r\n        outline: none;\r\n      }\r\n\r\n      p.selected {\r\n        text-decoration: line-through;\r\n        font-weight: normal;\r\n        color: #cbcbcb;\r\n      }\r\n\r\n      p {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n\r\n    .input_box {\r\n      input {\r\n        display: none;\r\n\r\n        &:checked + label {\r\n          background: #B0E6CF;\r\n\r\n          path {\r\n            color: #FEFBFA;\r\n          }\r\n        }\r\n      }\r\n\r\n      label {\r\n        width: 31px;\r\n        height: 31px;\r\n        border-radius: 25px;\r\n        background: #E2E2E2;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 2px 0 0 0;\r\n\r\n        path {\r\n          color: #afafaf;\r\n        }\r\n      }\r\n    }\r\n\r\n    .button_box {\r\n      button {\r\n        width: auto;\r\n        height: auto;\r\n\r\n        &:hover path {\r\n          color: red;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","import React, {useContext} from \"react\";\r\nimport {InfoContext} from \"../contexts/info\";\r\nimport TodoListStyle from \"../styled/TodoList-Style\";\r\nimport {FaCheck} from \"react-icons/fa\";\r\nimport {ImCross} from \"react-icons/im\";\r\n\r\nconst TodoList = () => {\r\n    const {todoList, changeStateTodo, modifyTodo, deleteTodo} = useContext(InfoContext);\r\n\r\n    const changeContent = ({key, target: {dataset, value}}) => {\r\n        if (key === \"Enter\") {\r\n            let item = todoList[dataset.idx];\r\n            item.content = value;\r\n            item.isModifying = !item.isModifying;\r\n\r\n            modifyTodo(item);\r\n        }\r\n    };\r\n\r\n    const changeSelected = (itemIdx) => {\r\n        let item = todoList[itemIdx];\r\n        item.isSelected = !item.isSelected;\r\n\r\n        modifyTodo(item);\r\n    };\r\n\r\n    console.log(\"render...\");\r\n    return (\r\n        <TodoListStyle>\r\n            {todoList.map((item, idx) =>\r\n                <div key={item.id} className=\"todo\">\r\n                    <div className=\"input_box\">\r\n                        <input id={\"item_\" + item.id} type=\"checkbox\" onChange={() => changeSelected(idx)}\r\n                               checked={item.isSelected}/>\r\n                        <label htmlFor={\"item_\" + item.id}><FaCheck/></label>\r\n                    </div>\r\n                    <div className=\"text_box\" onDoubleClick={(e) => changeStateTodo(item.id)}>\r\n                        {item.isModifying ?\r\n                            <input type=\"text\" className=\"modifying\" defaultValue={item.content} data-idx={idx} onKeyPress={changeContent}/> :\r\n                            <p className={item.isSelected ? \"selected\" : \"\"}>{item.content}</p>}\r\n                    </div>\r\n                    <div className=\"button_box\">\r\n                        <button onClick={(e) => deleteTodo(idx)}><ImCross/></button>\r\n                    </div>\r\n                </div>)}\r\n        </TodoListStyle>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={\"footer\"}>footer</div>\r\n    );\r\n};\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/road4.b47040e6.png\";","export default __webpack_public_path__ + \"static/media/blue_mountain.b65607a0.jpg\";","import styled from \"styled-components\";\r\nimport blueMountain from \"../images/blue_mountain.jpg\";\r\nimport forestRoad from \"../images/road4.png\";\r\n\r\nexport default styled.div`\r\n    max-width: 800px;\r\n    width:100%;\r\n    height:100%;\r\n    position: relative;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n\r\n    .top {\r\n      width:100%;\r\n      height:300px;\r\n\r\n      .title {\r\n        width: 100%;\r\n        height:100%;\r\n        position: relative;\r\n        display:flex;\r\n        border-radius: 9px;\r\n        overflow: hidden;\r\n        align-items:center;\r\n        justify-content: space-between;\r\n        margin-bottom: 10px;\r\n        z-index: 5;\r\n        padding:0 10px;\r\n\r\n        p.leftText {\r\n          color:#fff;\r\n          font-size:32px;\r\n          font-weight: bold;\r\n          letter-spacing: .5px;\r\n          display:block;\r\n          flex:6;\r\n        }\r\n\r\n        &:before {\r\n          content: \"\";\r\n          width:100%;\r\n          height:100%;\r\n          position:absolute;\r\n          left:0;\r\n          top:0;\r\n          background-image: url(${forestRoad});\r\n          background-size: cover;\r\n          background-repeat: no-repeat;\r\n          background-position: 0 60%;\r\n\r\n          z-index: -5;\r\n        }\r\n\r\n        &:after {\r\n          content: \"\";\r\n          width:100%;\r\n          height:100%;\r\n          position: absolute;\r\n          left:0;\r\n          top:0;\r\n          background: rgb(59, 66, 60, .25);\r\n\r\n          z-index: -3;\r\n        }\r\n\r\n        * {\r\n          z-index: 2;\r\n        }\r\n      }\r\n    }\r\n  \r\n  .bottom{\r\n    width: 97%;\r\n    height: 100%;\r\n    position: relative;\r\n    left: 50%;\r\n    transform: translate(-50%, -82px);\r\n    //background: #fff7ed;\r\n    background: #fff;\r\n    border-radius: 60px 60px / 61px 61px;\r\n    box-shadow: 0px 0px 24px 2px rgb(0 0 0 / 30%);\r\n    padding: 25px 10px 5px 10px;\r\n    z-index: 5;\r\n    \r\n    &:before {\r\n      content:\"\";\r\n      width:100%;\r\n      height:150px;\r\n      position: absolute;\r\n      top: -10px;\r\n      left:0;\r\n      background: rgba(255,255,255, .4);\r\n      border-radius: 60px 60px / 61px 61px;\r\n      z-index: -90;\r\n    }\r\n\r\n    &:after {\r\n      content:\"\";\r\n      width:100%;\r\n      height:150px;\r\n      position: absolute;\r\n      top: -20px;\r\n      left:0;\r\n      background: rgba(255,255,255, .4);\r\n      border-radius: 60px 60px / 61px 61px;\r\n      z-index: -90;\r\n    }\r\n  }\r\n\r\n`;","import styled, {css} from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  ${({ avg }) => css`\r\n    flex:4;\r\n    height:100%;\r\n\r\n    &:before {\r\n      //content: \"\";\r\n      //position:absolute;\r\n      //width: 40%;\r\n      //height: 100%;\r\n      //background: rgba(0,0,0, .25);\r\n      //right:0;\r\n      //top:0;\r\n    }\r\n    \r\n    &:after {\r\n      content: \"\";\r\n      width:60%;\r\n      height:5px;\r\n      background: #2EBAEE;\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 0;\r\n      \r\n      transition: .3s;\r\n    }\r\n\r\n    .chart_container {\r\n      display:flex;\r\n      justify-content:center;\r\n      align-content: center;\r\n      height:100px;\r\n    }\r\n  `}\r\n`;","import {useContext, useMemo} from \"react\";\r\nimport {InfoContext} from \"./contexts/info\";\r\nimport StatusStyle from \"./styled/Status-Style\";\r\nimport {PieChart} from \"react-minimal-pie-chart\";\r\n\r\nconst Status = () => {\r\n    const {todoList} = useContext(InfoContext);\r\n\r\n    const getAverage = list => {\r\n        const allLen = list.length;\r\n        const completeLen = list.filter(item => item.isSelected).length;\r\n\r\n        return Math.ceil(completeLen / allLen * 100) || 0;\r\n    }\r\n\r\n    const avg = useMemo(() => getAverage(todoList), [todoList]);\r\n\r\n    return (\r\n        <StatusStyle avg={avg}>\r\n            <div className=\"text_container\">\r\n                <p>asd</p>\r\n                <div className={\"line\"} />\r\n                <p>sd</p>\r\n            </div>\r\n            <div className=\"chart_container\">\r\n                <PieChart\r\n                    data={[{\r\n                        value: avg,\r\n                        color: \"#5ec297\",\r\n                        name: \"name1\",\r\n                    }]}\r\n                    reveal={avg}\r\n                    lineWidth={20}\r\n                    background=\"rgba(255,255,255,.85)\"\r\n                    startAngle={-90}\r\n                    lengthAngle={360}\r\n                    label={({dataEntry}) => dataEntry.value + \"%\"}\r\n                    labelStyle={{\r\n                        fontSize: \"26px\",\r\n                        fill: \"rgba(255,255,255,.9)\",\r\n                    }}\r\n                    labelPosition={0}\r\n                    rounded\r\n                    animate\r\n                />\r\n            </div>\r\n        </StatusStyle>\r\n    );\r\n};\r\n\r\nexport default Status;","import React, {useContext, useEffect} from 'react';\r\nimport AddInput from './Add/AddInput';\r\nimport TodoList from './TodoList/TodoList';\r\nimport Footer from './Footer/Footer';\r\nimport AppStyle from './styled/App-Style';\r\nimport InfoStore, {InfoContext} from \"./contexts/info\";\r\nimport Status from \"./Status\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <InfoStore>\r\n            <AppStyle>\r\n                <div className=\"top\">\r\n                    <div className=\"title\">\r\n                        <p className=\"leftText\">Your <br/> Things</p>\r\n                        <Status />\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <AddInput className=\"input_container\" />\r\n                    <TodoList />\r\n                    <Footer />\r\n                </div>\r\n            </AppStyle>\r\n        </InfoStore>\r\n    );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './Util.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}