{"version":3,"sources":["styled/AddInput-Style.js","contexts/info.js","Add/AddInput.js","styled/TodoList-Style.js","TodoList/TodoList.js","images/road4.png","images/blue_mountain.jpg","styled/App-Style.js","styled/Status-Style.js","Status.js","App.js","index.js"],"names":["styled","div","avg","textPercent","css","defaultData","todoList","textMaxLength","addTodo","modifyTodo","deleteTodo","validation","changeStateTodo","InfoContext","createContext","InfoStore","props","useState","JSON","parse","localStorage","getItem","setTodoList","getTodoIdx","itemId","findIndex","findItem","id","type","Array","isArray","forEach","idx","isModifying","target","isSelected","useBeforeunload","event","setItem","stringify","useEffect","document","querySelector","addEventListener","modifyingTodos","filter","item","className","length","console","log","map","Provider","value","itemIdx","splice","test","content","trim","children","AddInput","useContext","setTextPercent","input","useRef","useMemo","list","allLen","completeLen","Math","ceil","getAverage","readyAddTodo","current","ref","onKeyPress","key","onInput","percent","slice","onClick","TodoList","changeContent","dataset","onChange","changeSelected","checked","htmlFor","onDoubleClick","e","defaultValue","forestRoad","Status","data","color","name","reveal","lineWidth","background","startAngle","lengthAngle","rounded","animate","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b127b0aa.chunk.js","sourcesContent":["import styled, {css} from \"styled-components\";\r\n\r\nexport default styled.div`\r\n    ${({ avg, textPercent }) => css`\r\n      width:90%;\r\n      height:10%;\r\n      position: relative;\r\n      left:50%;\r\n      transform: translate(-50%, 0px);\r\n      display:flex;\r\n      align-items: center;\r\n\r\n      &:before {\r\n        content: \"\";\r\n        width: ${textPercent}%;\r\n        height: 3px;\r\n        position: absolute;\r\n        left: 0;\r\n        top:calc(50% + 18.6px);\r\n        transform: translateY(-50%);\r\n        background: #B0E6CF;\r\n        z-index: 99999;\r\n        transition: .2s;\r\n      }\r\n      \r\n      input {\r\n        width:100%;\r\n        height: 40px;\r\n        position: relative;\r\n        border:none;\r\n        border-bottom: 3px solid rgba(19,19,19, .5);\r\n        padding:0 37px 0px 0px;\r\n        font-weight: bold;\r\n        outline: none;\r\n\r\n        //box-shadow: 0 0 10px 10px rgba(94,194,151,.2);\r\n        //rgba(208,218,253,.5)\r\n      }\r\n\r\n      svg {\r\n        position: absolute;\r\n        font-size: 22px;\r\n        right: 0px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        z-index: 5;\r\n        cursor: pointer;\r\n        \r\n        path {\r\n          transition: .3s;\r\n        }\r\n        \r\n        &:hover path {\r\n          color:#73BF9E;\r\n        }\r\n      }\r\n    `}\r\n`;","import {createContext, useEffect, useState} from \"react\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\n\r\nconst defaultData = {\r\n    todoList: [],\r\n    textMaxLength:0,\r\n\r\n    addTodo: () => {},\r\n    modifyTodo: () => {},\r\n    deleteTodo: () => {},\r\n    validation: () => {},\r\n    changeStateTodo: () => {},\r\n};\r\n\r\nexport const InfoContext = createContext(defaultData);\r\n\r\n\r\n\r\nconst InfoStore = (props) => {\r\n    const textMaxLength = 30;\r\n    const [todoList, setTodoList] = useState(JSON.parse(localStorage.getItem(\"todoList\")) || []);\r\n\r\n    const getTodoIdx = (itemId) => {\r\n        return todoList.findIndex(findItem => findItem.id === itemId );\r\n    };\r\n\r\n    const addTodo = (item) => {\r\n        setTodoList([...todoList, item]);\r\n    };\r\n\r\n    const modifyTodo = (item) => {\r\n        todoList[getTodoIdx(item.id)] = item;\r\n\r\n        setTodoList([...todoList]);\r\n    };\r\n\r\n    const changeStateTodo = (itemId, type = \"modify\") => {\r\n        if(Array.isArray(itemId)) {\r\n            itemId.forEach(idx => {\r\n                todoList[getTodoIdx(idx)].isModifying = !todoList[getTodoIdx(idx)].isModifying;\r\n            });\r\n        } else {\r\n            let target = todoList[getTodoIdx(itemId)];\r\n            if(type === \"modify\") {\r\n                target.isModifying = !target.isModifying;\r\n            } else if(type === \"select\") {\r\n                target.isSelected = !target.isSelected;\r\n            }\r\n        }\r\n\r\n        setTodoList([...todoList]);\r\n    };\r\n\r\n\r\n    const deleteTodo = (itemIdx) => {\r\n        todoList.splice(itemIdx, 1);\r\n\r\n        setTodoList([...todoList]);\r\n    };\r\n\r\n    const validation = (item) => {\r\n        const regex = /^[a-zA-Z0-9ㄱ-ㅎ가-힣!?\"'\\s]+$/g;\r\n\r\n        return regex.test(item.content.trim());\r\n    };\r\n\r\n    useBeforeunload((event) => {\r\n        localStorage.setItem(\"todoList\", JSON.stringify(todoList));\r\n    });\r\n\r\n    useEffect(() => {\r\n        document.querySelector(\"#root\").addEventListener(\"click\", ({target}) => {\r\n            const modifyingTodos = todoList.filter(item => item.isModifying);\r\n\r\n            if(target.className !== \"modifying\" && modifyingTodos.length !== 0) {\r\n                console.log(\"asfasf\");\r\n                changeStateTodo(modifyingTodos.map(item => item.id));\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <InfoContext.Provider value={{textMaxLength, todoList, addTodo, modifyTodo, deleteTodo, validation, changeStateTodo}}>\r\n            {props.children}\r\n        </InfoContext.Provider>\r\n    );\r\n};\r\n\r\nexport default InfoStore;","import React, {useContext, useMemo, useRef, useState} from \"react\";\r\nimport AddInputStyle from \"../styled/AddInput-Style\";\r\nimport {InfoContext} from \"../contexts/info\";\r\nimport {FaPlus, FaPlusCircle} from \"react-icons/fa\";\r\n\r\nconst AddInput = (props) => {\r\n    const { className } = props;\r\n    const {todoList, textMaxLength, addTodo, validation} = useContext(InfoContext);\r\n    const [textPercent, setTextPercent] = useState(0);\r\n    const input = useRef(null);\r\n\r\n    const getAverage = list => {\r\n        const allLen = list.length;\r\n        const completeLen = list.filter(item => item.isSelected).length;\r\n\r\n        return Math.ceil(completeLen / allLen * 100) || 0;\r\n    }\r\n\r\n    const avg = useMemo(() => getAverage(todoList), [todoList]);\r\n\r\n    const createItem = () => {\r\n        const lastItem = todoList[todoList.length - 1] || {id:0, content:\"\"};\r\n\r\n        return {\r\n            id: lastItem.id + 1,\r\n            content: input.current.value,\r\n            isSelected:false,\r\n            isModifying:false,\r\n        };\r\n    }\r\n\r\n    const readyAddTodo = () => {\r\n        const item = createItem();\r\n\r\n        if(validation(item)) {\r\n            addTodo(item);\r\n\r\n            input.current.value = \"\";\r\n            setTextPercent(0);\r\n        } else {\r\n            console.log(\"error!!\");\r\n        }\r\n    };\r\n\r\n    const onKeyPress = ( { key, target: { value } } ) => {\r\n        if(key === \"Enter\") readyAddTodo();\r\n    };\r\n\r\n    const onInput = ({target: { value }}) => {\r\n        let percent = Math.ceil(value.length / textMaxLength * 100) || 0;\r\n        percent = percent > 100 ? 100 : percent;\r\n        setTextPercent(percent);\r\n\r\n        if(value.length >= textMaxLength) {\r\n            input.current.value = value.slice(0, textMaxLength);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AddInputStyle className={className} avg={avg} textPercent={textPercent}>\r\n            <input ref={input} type=\"text\" onKeyPress={onKeyPress} onInput={onInput}/>\r\n                <FaPlus onClick={readyAddTodo} />\r\n        </AddInputStyle>\r\n    );\r\n};\r\n\r\nexport default AddInput;","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 700px;\r\n  overflow-y: auto;\r\n  position: relative;\r\n  padding: 0 39px;\r\n\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  .todo {\r\n    margin: 15px 0;\r\n    padding: 5px 0;\r\n    min-height: 41px;\r\n    height: auto;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    .text_box {\r\n      flex: 1;\r\n      min-height: 100%;\r\n      text-align: left;\r\n      padding: 0 10px;\r\n\r\n      input {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 25px;\r\n        border: 1px solid black;\r\n        padding: 5px 0 5px 10px;\r\n\r\n        outline: none;\r\n      }\r\n\r\n      p.selected {\r\n        text-decoration: line-through;\r\n        font-weight: normal;\r\n        color: #cbcbcb;\r\n      }\r\n\r\n      p {\r\n        font-weight: bold;\r\n        white-space: break-spaces;\r\n        word-break: break-all;\r\n      }\r\n    }\r\n\r\n    .input_box {\r\n      input {\r\n        display: none;\r\n\r\n        & + label {\r\n          transition: .3s;\r\n        }\r\n\r\n        &:checked + label {\r\n          background: #B0E6CF;\r\n\r\n          path {\r\n            color: #FEFBFA;\r\n            transition: .3s;\r\n          }\r\n        }\r\n      }\r\n\r\n      label {\r\n        width: 31px;\r\n        height: 31px;\r\n        border-radius: 25px;\r\n        background: #E2E2E2;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 2px 0 0 0;\r\n\r\n        path {\r\n          color: #afafaf;\r\n        }\r\n      }\r\n    }\r\n\r\n    .button_box {\r\n      button {\r\n        width: auto;\r\n        height: auto;\r\n\r\n        path {\r\n          transition: .3s;\r\n        }\r\n\r\n        &:hover path {\r\n          color: #ff5959;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","import React, {useContext} from \"react\";\r\nimport {InfoContext} from \"../contexts/info\";\r\nimport TodoListStyle from \"../styled/TodoList-Style\";\r\nimport {FaCheck} from \"react-icons/fa\";\r\nimport {ImCross} from \"react-icons/im\";\r\n\r\nconst TodoList = () => {\r\n    const {todoList, changeStateTodo, modifyTodo, deleteTodo} = useContext(InfoContext);\r\n\r\n    const changeContent = ({key, target: {dataset, value}}) => {\r\n        if (key === \"Enter\") {\r\n            let item = todoList[dataset.idx];\r\n            item.content = value;\r\n            item.isModifying = !item.isModifying;\r\n\r\n            modifyTodo(item);\r\n        }\r\n    };\r\n\r\n    const changeSelected = (itemIdx) => {\r\n        let item = todoList[itemIdx];\r\n        item.isSelected = !item.isSelected;\r\n\r\n        modifyTodo(item);\r\n    };\r\n\r\n    console.log(\"render...\");\r\n    return (\r\n        <TodoListStyle>\r\n            {todoList.map((item, idx) =>\r\n                <div key={item.id} className=\"todo\">\r\n                    <div className=\"input_box\">\r\n                        <input id={\"item_\" + item.id} type=\"checkbox\" onChange={() => changeSelected(idx)}\r\n                               checked={item.isSelected}/>\r\n                        <label htmlFor={\"item_\" + item.id}><FaCheck/></label>\r\n                    </div>\r\n                    <div className=\"text_box\" onDoubleClick={(e) => changeStateTodo(item.id)}>\r\n                        {item.isModifying ?\r\n                            <input type=\"text\" className=\"modifying\" defaultValue={item.content} data-idx={idx} onKeyPress={changeContent}/> :\r\n                            <p className={item.isSelected ? \"selected\" : \"\"}>{item.content}</p>}\r\n                    </div>\r\n                    <div className=\"button_box\">\r\n                        <button onClick={(e) => deleteTodo(idx)}><ImCross/></button>\r\n                    </div>\r\n                </div>)}\r\n        </TodoListStyle>\r\n    );\r\n};\r\n\r\nexport default TodoList;","export default __webpack_public_path__ + \"static/media/road4.b47040e6.png\";","export default __webpack_public_path__ + \"static/media/blue_mountain.b65607a0.jpg\";","import styled from \"styled-components\";\r\nimport blueMountain from \"../images/blue_mountain.jpg\";\r\nimport forestRoad from \"../images/road4.png\";\r\n\r\nexport default styled.div`\r\n    max-width: 800px;\r\n    width:100%;\r\n    height:100%;\r\n    position: relative;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n\r\n    .top {\r\n      width:100%;\r\n      height:300px;\r\n\r\n      .title {\r\n        width: 100%;\r\n        height:100%;\r\n        position: relative;\r\n        display:flex;\r\n        border-radius: 9px;\r\n        overflow: hidden;\r\n        align-items:flex-start;\r\n        justify-content: space-between;\r\n        margin-bottom: 10px;\r\n        z-index: 5;\r\n        padding:0 60px;\r\n        \r\n        .left_box {\r\n          height: 37%;\r\n          display: flex;\r\n          align-items: flex-end;\r\n          padding-bottom: 10px;\r\n        }\r\n        \r\n        p.leftText {\r\n          color:#fff;\r\n          font-size:32px;\r\n          font-weight: bold;\r\n          letter-spacing: .5px;\r\n          display:block;\r\n          flex:6;\r\n        }\r\n\r\n        &:before {\r\n          content: \"\";\r\n          width:100%;\r\n          height:100%;\r\n          position:absolute;\r\n          left:0;\r\n          top:0;\r\n          background-image: url(${forestRoad});\r\n          background-size: cover;\r\n          background-repeat: no-repeat;\r\n          background-position: 0 60%;\r\n\r\n          z-index: -5;\r\n        }\r\n\r\n        &:after {\r\n          content: \"\";\r\n          width:100%;\r\n          height:100%;\r\n          position: absolute;\r\n          left:0;\r\n          top:0;\r\n          background: rgb(59, 66, 60, .25);\r\n\r\n          z-index: -3;\r\n        }\r\n\r\n        * {\r\n          z-index: 2;\r\n        }\r\n      }\r\n    }\r\n  \r\n  .bottom{\r\n    width: 97%;\r\n    height: 100%;\r\n    position: relative;\r\n    left: 50%;\r\n    transform: translate(-50%, -170px);\r\n    //background: #fff7ed;\r\n    background: #fff;\r\n    border-radius: 60px 60px / 61px 61px;\r\n    box-shadow: 0px 0px 24px 2px rgb(0 0 0 / 30%);\r\n    padding: 25px 10px 5px 10px;\r\n    z-index: 5;\r\n    \r\n    &:before {\r\n      content:\"\";\r\n      width:100%;\r\n      height:150px;\r\n      position: absolute;\r\n      top: -10px;\r\n      left:0;\r\n      background: rgba(255,255,255, .4);\r\n      border-radius: 60px 60px / 61px 61px;\r\n      z-index: -90;\r\n    }\r\n\r\n    &:after {\r\n      content:\"\";\r\n      width:100%;\r\n      height:150px;\r\n      position: absolute;\r\n      top: -20px;\r\n      left:0;\r\n      background: rgba(255,255,255, .4);\r\n      border-radius: 60px 60px / 61px 61px;\r\n      z-index: -90;\r\n    }\r\n  }\r\n\r\n`;","import styled, {css} from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  ${({ avg }) => css`\r\n    flex:4;\r\n    height:37%;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-end;\r\n    padding-bottom: 10px;\r\n\r\n    &:before {\r\n      //content: \"\";\r\n      //position:absolute;\r\n      //width: 40%;\r\n      //height: 100%;\r\n      //background: rgba(0,0,0, .25);\r\n      //right:0;\r\n      //top:0;\r\n    }\r\n\r\n    .chart_container {\r\n      display:flex;\r\n      justify-content:center;\r\n      align-content: center;\r\n      \r\n      p {\r\n        display: flex;\r\n        align-items: center;\r\n        \r\n        &, b {\r\n          color:white;\r\n        }\r\n        \r\n        b {\r\n          padding-right: 4px;\r\n        }\r\n      }\r\n      \r\n      svg {\r\n        width: 36px;\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n    \r\n    .text_container {\r\n      position: relative;\r\n      height:50%;\r\n      display: flex;  \r\n      align-items: center;\r\n      justify-content: center;\r\n      \r\n      p {\r\n        padding: 0;\r\n        color:white;\r\n      }\r\n      \r\n      .line {\r\n        width: 1px;\r\n        height: 100%;\r\n        background: rgba(255, 255, 255, .6);\r\n        margin:0 10px;\r\n      }\r\n    }\r\n  `}\r\n`;","import {useContext, useMemo} from \"react\";\r\nimport {InfoContext} from \"./contexts/info\";\r\nimport StatusStyle from \"./styled/Status-Style\";\r\nimport {PieChart} from \"react-minimal-pie-chart\";\r\n\r\nconst Status = () => {\r\n    const {todoList} = useContext(InfoContext);\r\n\r\n    const getAverage = list => {\r\n        const allLen = list.length;\r\n        const completeLen = list.filter(item => item.isSelected).length;\r\n\r\n        return Math.ceil(completeLen / allLen * 100) || 0;\r\n    }\r\n\r\n    const avg = useMemo(() => getAverage(todoList), [todoList]);\r\n\r\n    return (\r\n        <StatusStyle avg={avg}>\r\n            <div className=\"chart_container\">\r\n                <PieChart\r\n                    data={[{\r\n                        value: avg,\r\n                        color: \"#5ec297\",\r\n                        name: \"name1\",\r\n                    }]}\r\n                    reveal={avg}\r\n                    lineWidth={20}\r\n                    background=\"rgba(255,255,255,.85)\"\r\n                    startAngle={-90}\r\n                    lengthAngle={360}\r\n                    rounded\r\n                    animate\r\n                />\r\n                <p><b>{avg}%</b> done</p>\r\n            </div>\r\n        </StatusStyle>\r\n    );\r\n};\r\n\r\nexport default Status;","import React, {useContext, useEffect} from 'react';\r\nimport AddInput from './Add/AddInput';\r\nimport TodoList from './TodoList/TodoList';\r\nimport Footer from './Footer/Footer';\r\nimport AppStyle from './styled/App-Style';\r\nimport InfoStore, {InfoContext} from \"./contexts/info\";\r\nimport Status from \"./Status\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <InfoStore>\r\n            <AppStyle>\r\n                <div className=\"top\">\r\n                    <div className=\"title\">\r\n                        <div className=\"left_box\">\r\n                            <p className=\"leftText\">TODO LIST</p>\r\n                        </div>\r\n                        <Status />\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <AddInput className=\"input_container\" />\r\n                    <TodoList />\r\n                </div>\r\n            </AppStyle>\r\n        </InfoStore>\r\n    );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './Util.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}